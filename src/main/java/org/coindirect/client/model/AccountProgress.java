/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.coindirect.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.coindirect.client.model.AccountDocument;

/**
 * AccountProgress
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-10T11:44:48.559+02:00")
public class AccountProgress {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("basicDetails")
  private Boolean basicDetails = false;

  @SerializedName("documentsUploaded")
  private Boolean documentsUploaded = false;

  @SerializedName("readyToBuy")
  private Boolean readyToBuy = false;

  @SerializedName("readyToSell")
  private Boolean readyToSell = false;

  @SerializedName("partnerApproved")
  private Boolean partnerApproved = false;

  @SerializedName("partnerApplied")
  private Boolean partnerApplied = false;

  @SerializedName("hasOrdered")
  private Boolean hasOrdered = false;

  @SerializedName("name")
  private String name = null;

  @SerializedName("affiliateCode")
  private String affiliateCode = null;

  @SerializedName("documents")
  private List<AccountDocument> documents = null;

  public AccountProgress id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AccountProgress basicDetails(Boolean basicDetails) {
    this.basicDetails = basicDetails;
    return this;
  }

   /**
   * Get basicDetails
   * @return basicDetails
  **/
  @ApiModelProperty(value = "")
  public Boolean isBasicDetails() {
    return basicDetails;
  }

  public void setBasicDetails(Boolean basicDetails) {
    this.basicDetails = basicDetails;
  }

  public AccountProgress documentsUploaded(Boolean documentsUploaded) {
    this.documentsUploaded = documentsUploaded;
    return this;
  }

   /**
   * Get documentsUploaded
   * @return documentsUploaded
  **/
  @ApiModelProperty(value = "")
  public Boolean isDocumentsUploaded() {
    return documentsUploaded;
  }

  public void setDocumentsUploaded(Boolean documentsUploaded) {
    this.documentsUploaded = documentsUploaded;
  }

  public AccountProgress readyToBuy(Boolean readyToBuy) {
    this.readyToBuy = readyToBuy;
    return this;
  }

   /**
   * Get readyToBuy
   * @return readyToBuy
  **/
  @ApiModelProperty(value = "")
  public Boolean isReadyToBuy() {
    return readyToBuy;
  }

  public void setReadyToBuy(Boolean readyToBuy) {
    this.readyToBuy = readyToBuy;
  }

  public AccountProgress readyToSell(Boolean readyToSell) {
    this.readyToSell = readyToSell;
    return this;
  }

   /**
   * Get readyToSell
   * @return readyToSell
  **/
  @ApiModelProperty(value = "")
  public Boolean isReadyToSell() {
    return readyToSell;
  }

  public void setReadyToSell(Boolean readyToSell) {
    this.readyToSell = readyToSell;
  }

  public AccountProgress partnerApproved(Boolean partnerApproved) {
    this.partnerApproved = partnerApproved;
    return this;
  }

   /**
   * Get partnerApproved
   * @return partnerApproved
  **/
  @ApiModelProperty(value = "")
  public Boolean isPartnerApproved() {
    return partnerApproved;
  }

  public void setPartnerApproved(Boolean partnerApproved) {
    this.partnerApproved = partnerApproved;
  }

  public AccountProgress partnerApplied(Boolean partnerApplied) {
    this.partnerApplied = partnerApplied;
    return this;
  }

   /**
   * Get partnerApplied
   * @return partnerApplied
  **/
  @ApiModelProperty(value = "")
  public Boolean isPartnerApplied() {
    return partnerApplied;
  }

  public void setPartnerApplied(Boolean partnerApplied) {
    this.partnerApplied = partnerApplied;
  }

  public AccountProgress hasOrdered(Boolean hasOrdered) {
    this.hasOrdered = hasOrdered;
    return this;
  }

   /**
   * Get hasOrdered
   * @return hasOrdered
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasOrdered() {
    return hasOrdered;
  }

  public void setHasOrdered(Boolean hasOrdered) {
    this.hasOrdered = hasOrdered;
  }

  public AccountProgress name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AccountProgress affiliateCode(String affiliateCode) {
    this.affiliateCode = affiliateCode;
    return this;
  }

   /**
   * Get affiliateCode
   * @return affiliateCode
  **/
  @ApiModelProperty(value = "")
  public String getAffiliateCode() {
    return affiliateCode;
  }

  public void setAffiliateCode(String affiliateCode) {
    this.affiliateCode = affiliateCode;
  }

  public AccountProgress documents(List<AccountDocument> documents) {
    this.documents = documents;
    return this;
  }

  public AccountProgress addDocumentsItem(AccountDocument documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<AccountDocument>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Get documents
   * @return documents
  **/
  @ApiModelProperty(value = "")
  public List<AccountDocument> getDocuments() {
    return documents;
  }

  public void setDocuments(List<AccountDocument> documents) {
    this.documents = documents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountProgress accountProgress = (AccountProgress) o;
    return Objects.equals(this.id, accountProgress.id) &&
        Objects.equals(this.basicDetails, accountProgress.basicDetails) &&
        Objects.equals(this.documentsUploaded, accountProgress.documentsUploaded) &&
        Objects.equals(this.readyToBuy, accountProgress.readyToBuy) &&
        Objects.equals(this.readyToSell, accountProgress.readyToSell) &&
        Objects.equals(this.partnerApproved, accountProgress.partnerApproved) &&
        Objects.equals(this.partnerApplied, accountProgress.partnerApplied) &&
        Objects.equals(this.hasOrdered, accountProgress.hasOrdered) &&
        Objects.equals(this.name, accountProgress.name) &&
        Objects.equals(this.affiliateCode, accountProgress.affiliateCode) &&
        Objects.equals(this.documents, accountProgress.documents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, basicDetails, documentsUploaded, readyToBuy, readyToSell, partnerApproved, partnerApplied, hasOrdered, name, affiliateCode, documents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountProgress {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    basicDetails: ").append(toIndentedString(basicDetails)).append("\n");
    sb.append("    documentsUploaded: ").append(toIndentedString(documentsUploaded)).append("\n");
    sb.append("    readyToBuy: ").append(toIndentedString(readyToBuy)).append("\n");
    sb.append("    readyToSell: ").append(toIndentedString(readyToSell)).append("\n");
    sb.append("    partnerApproved: ").append(toIndentedString(partnerApproved)).append("\n");
    sb.append("    partnerApplied: ").append(toIndentedString(partnerApplied)).append("\n");
    sb.append("    hasOrdered: ").append(toIndentedString(hasOrdered)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    affiliateCode: ").append(toIndentedString(affiliateCode)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

