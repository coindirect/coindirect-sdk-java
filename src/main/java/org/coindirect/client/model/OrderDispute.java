/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.coindirect.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.coindirect.client.model.Order;
import org.coindirect.client.model.OrderDisputeReason;
import org.coindirect.client.model.PublicAccount;
import org.threeten.bp.OffsetDateTime;

/**
 * OrderDispute
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-10T11:44:48.559+02:00")
public class OrderDispute {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("dateCreated")
  private OffsetDateTime dateCreated = null;

  @SerializedName("lastUpdated")
  private OffsetDateTime lastUpdated = null;

  @SerializedName("order")
  private Order order = null;

  @SerializedName("processed")
  private Boolean processed = false;

  @SerializedName("reason")
  private OrderDisputeReason reason = null;

  @SerializedName("startedBy")
  private PublicAccount startedBy = null;

  @SerializedName("resolution")
  private String resolution = null;

  @SerializedName("otherReason")
  private String otherReason = null;

  @SerializedName("message")
  private String message = null;

  public OrderDispute id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public OrderDispute dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }

  public OrderDispute lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public OrderDispute order(Order order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @ApiModelProperty(value = "")
  public Order getOrder() {
    return order;
  }

  public void setOrder(Order order) {
    this.order = order;
  }

  public OrderDispute processed(Boolean processed) {
    this.processed = processed;
    return this;
  }

   /**
   * Get processed
   * @return processed
  **/
  @ApiModelProperty(value = "")
  public Boolean isProcessed() {
    return processed;
  }

  public void setProcessed(Boolean processed) {
    this.processed = processed;
  }

  public OrderDispute reason(OrderDisputeReason reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @ApiModelProperty(value = "")
  public OrderDisputeReason getReason() {
    return reason;
  }

  public void setReason(OrderDisputeReason reason) {
    this.reason = reason;
  }

  public OrderDispute startedBy(PublicAccount startedBy) {
    this.startedBy = startedBy;
    return this;
  }

   /**
   * Get startedBy
   * @return startedBy
  **/
  @ApiModelProperty(value = "")
  public PublicAccount getStartedBy() {
    return startedBy;
  }

  public void setStartedBy(PublicAccount startedBy) {
    this.startedBy = startedBy;
  }

  public OrderDispute resolution(String resolution) {
    this.resolution = resolution;
    return this;
  }

   /**
   * Get resolution
   * @return resolution
  **/
  @ApiModelProperty(value = "")
  public String getResolution() {
    return resolution;
  }

  public void setResolution(String resolution) {
    this.resolution = resolution;
  }

  public OrderDispute otherReason(String otherReason) {
    this.otherReason = otherReason;
    return this;
  }

   /**
   * Get otherReason
   * @return otherReason
  **/
  @ApiModelProperty(value = "")
  public String getOtherReason() {
    return otherReason;
  }

  public void setOtherReason(String otherReason) {
    this.otherReason = otherReason;
  }

  public OrderDispute message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @ApiModelProperty(value = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderDispute orderDispute = (OrderDispute) o;
    return Objects.equals(this.id, orderDispute.id) &&
        Objects.equals(this.dateCreated, orderDispute.dateCreated) &&
        Objects.equals(this.lastUpdated, orderDispute.lastUpdated) &&
        Objects.equals(this.order, orderDispute.order) &&
        Objects.equals(this.processed, orderDispute.processed) &&
        Objects.equals(this.reason, orderDispute.reason) &&
        Objects.equals(this.startedBy, orderDispute.startedBy) &&
        Objects.equals(this.resolution, orderDispute.resolution) &&
        Objects.equals(this.otherReason, orderDispute.otherReason) &&
        Objects.equals(this.message, orderDispute.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, dateCreated, lastUpdated, order, processed, reason, startedBy, resolution, otherReason, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderDispute {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    processed: ").append(toIndentedString(processed)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    startedBy: ").append(toIndentedString(startedBy)).append("\n");
    sb.append("    resolution: ").append(toIndentedString(resolution)).append("\n");
    sb.append("    otherReason: ").append(toIndentedString(otherReason)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

