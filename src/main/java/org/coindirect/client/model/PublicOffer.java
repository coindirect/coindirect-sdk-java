/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.coindirect.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.coindirect.client.model.Currency;
import org.coindirect.client.model.PublicAccount;

/**
 * PublicOffer
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-10T11:44:48.559+02:00")
public class PublicOffer {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("currencyForSale")
  private Currency currencyForSale = null;

  @SerializedName("currencyAccepted")
  private Currency currencyAccepted = null;

  @SerializedName("baseCurrency")
  private Currency baseCurrency = null;

  @SerializedName("minimumAmount")
  private BigDecimal minimumAmount = null;

  @SerializedName("maximumAmount")
  private BigDecimal maximumAmount = null;

  @SerializedName("minimumValue")
  private BigDecimal minimumValue = null;

  @SerializedName("maximumValue")
  private BigDecimal maximumValue = null;

  @SerializedName("price")
  private BigDecimal price = null;

  @SerializedName("basePrice")
  private BigDecimal basePrice = null;

  @SerializedName("offerAccount")
  private PublicAccount offerAccount = null;

  @SerializedName("paymentWindow")
  private Long paymentWindow = null;

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("directTransfer")
  private Boolean directTransfer = false;

  @SerializedName("features")
  private List<String> features = null;

  public PublicOffer id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PublicOffer currencyForSale(Currency currencyForSale) {
    this.currencyForSale = currencyForSale;
    return this;
  }

   /**
   * Get currencyForSale
   * @return currencyForSale
  **/
  @ApiModelProperty(value = "")
  public Currency getCurrencyForSale() {
    return currencyForSale;
  }

  public void setCurrencyForSale(Currency currencyForSale) {
    this.currencyForSale = currencyForSale;
  }

  public PublicOffer currencyAccepted(Currency currencyAccepted) {
    this.currencyAccepted = currencyAccepted;
    return this;
  }

   /**
   * Get currencyAccepted
   * @return currencyAccepted
  **/
  @ApiModelProperty(value = "")
  public Currency getCurrencyAccepted() {
    return currencyAccepted;
  }

  public void setCurrencyAccepted(Currency currencyAccepted) {
    this.currencyAccepted = currencyAccepted;
  }

  public PublicOffer baseCurrency(Currency baseCurrency) {
    this.baseCurrency = baseCurrency;
    return this;
  }

   /**
   * Get baseCurrency
   * @return baseCurrency
  **/
  @ApiModelProperty(value = "")
  public Currency getBaseCurrency() {
    return baseCurrency;
  }

  public void setBaseCurrency(Currency baseCurrency) {
    this.baseCurrency = baseCurrency;
  }

  public PublicOffer minimumAmount(BigDecimal minimumAmount) {
    this.minimumAmount = minimumAmount;
    return this;
  }

   /**
   * Get minimumAmount
   * @return minimumAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMinimumAmount() {
    return minimumAmount;
  }

  public void setMinimumAmount(BigDecimal minimumAmount) {
    this.minimumAmount = minimumAmount;
  }

  public PublicOffer maximumAmount(BigDecimal maximumAmount) {
    this.maximumAmount = maximumAmount;
    return this;
  }

   /**
   * Get maximumAmount
   * @return maximumAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMaximumAmount() {
    return maximumAmount;
  }

  public void setMaximumAmount(BigDecimal maximumAmount) {
    this.maximumAmount = maximumAmount;
  }

  public PublicOffer minimumValue(BigDecimal minimumValue) {
    this.minimumValue = minimumValue;
    return this;
  }

   /**
   * Get minimumValue
   * @return minimumValue
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMinimumValue() {
    return minimumValue;
  }

  public void setMinimumValue(BigDecimal minimumValue) {
    this.minimumValue = minimumValue;
  }

  public PublicOffer maximumValue(BigDecimal maximumValue) {
    this.maximumValue = maximumValue;
    return this;
  }

   /**
   * Get maximumValue
   * @return maximumValue
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMaximumValue() {
    return maximumValue;
  }

  public void setMaximumValue(BigDecimal maximumValue) {
    this.maximumValue = maximumValue;
  }

  public PublicOffer price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public PublicOffer basePrice(BigDecimal basePrice) {
    this.basePrice = basePrice;
    return this;
  }

   /**
   * Get basePrice
   * @return basePrice
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getBasePrice() {
    return basePrice;
  }

  public void setBasePrice(BigDecimal basePrice) {
    this.basePrice = basePrice;
  }

  public PublicOffer offerAccount(PublicAccount offerAccount) {
    this.offerAccount = offerAccount;
    return this;
  }

   /**
   * Get offerAccount
   * @return offerAccount
  **/
  @ApiModelProperty(value = "")
  public PublicAccount getOfferAccount() {
    return offerAccount;
  }

  public void setOfferAccount(PublicAccount offerAccount) {
    this.offerAccount = offerAccount;
  }

  public PublicOffer paymentWindow(Long paymentWindow) {
    this.paymentWindow = paymentWindow;
    return this;
  }

   /**
   * Get paymentWindow
   * @return paymentWindow
  **/
  @ApiModelProperty(value = "")
  public Long getPaymentWindow() {
    return paymentWindow;
  }

  public void setPaymentWindow(Long paymentWindow) {
    this.paymentWindow = paymentWindow;
  }

  public PublicOffer notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @ApiModelProperty(value = "")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public PublicOffer directTransfer(Boolean directTransfer) {
    this.directTransfer = directTransfer;
    return this;
  }

   /**
   * Get directTransfer
   * @return directTransfer
  **/
  @ApiModelProperty(value = "")
  public Boolean isDirectTransfer() {
    return directTransfer;
  }

  public void setDirectTransfer(Boolean directTransfer) {
    this.directTransfer = directTransfer;
  }

  public PublicOffer features(List<String> features) {
    this.features = features;
    return this;
  }

  public PublicOffer addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<String>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @ApiModelProperty(value = "")
  public List<String> getFeatures() {
    return features;
  }

  public void setFeatures(List<String> features) {
    this.features = features;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicOffer publicOffer = (PublicOffer) o;
    return Objects.equals(this.id, publicOffer.id) &&
        Objects.equals(this.currencyForSale, publicOffer.currencyForSale) &&
        Objects.equals(this.currencyAccepted, publicOffer.currencyAccepted) &&
        Objects.equals(this.baseCurrency, publicOffer.baseCurrency) &&
        Objects.equals(this.minimumAmount, publicOffer.minimumAmount) &&
        Objects.equals(this.maximumAmount, publicOffer.maximumAmount) &&
        Objects.equals(this.minimumValue, publicOffer.minimumValue) &&
        Objects.equals(this.maximumValue, publicOffer.maximumValue) &&
        Objects.equals(this.price, publicOffer.price) &&
        Objects.equals(this.basePrice, publicOffer.basePrice) &&
        Objects.equals(this.offerAccount, publicOffer.offerAccount) &&
        Objects.equals(this.paymentWindow, publicOffer.paymentWindow) &&
        Objects.equals(this.notes, publicOffer.notes) &&
        Objects.equals(this.directTransfer, publicOffer.directTransfer) &&
        Objects.equals(this.features, publicOffer.features);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, currencyForSale, currencyAccepted, baseCurrency, minimumAmount, maximumAmount, minimumValue, maximumValue, price, basePrice, offerAccount, paymentWindow, notes, directTransfer, features);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicOffer {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    currencyForSale: ").append(toIndentedString(currencyForSale)).append("\n");
    sb.append("    currencyAccepted: ").append(toIndentedString(currencyAccepted)).append("\n");
    sb.append("    baseCurrency: ").append(toIndentedString(baseCurrency)).append("\n");
    sb.append("    minimumAmount: ").append(toIndentedString(minimumAmount)).append("\n");
    sb.append("    maximumAmount: ").append(toIndentedString(maximumAmount)).append("\n");
    sb.append("    minimumValue: ").append(toIndentedString(minimumValue)).append("\n");
    sb.append("    maximumValue: ").append(toIndentedString(maximumValue)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    basePrice: ").append(toIndentedString(basePrice)).append("\n");
    sb.append("    offerAccount: ").append(toIndentedString(offerAccount)).append("\n");
    sb.append("    paymentWindow: ").append(toIndentedString(paymentWindow)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    directTransfer: ").append(toIndentedString(directTransfer)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

