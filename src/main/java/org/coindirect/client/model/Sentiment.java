/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.coindirect.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.coindirect.client.model.Currency;

/**
 * Sentiment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-10T11:44:48.559+02:00")
public class Sentiment {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("period")
  private String period = null;

  @SerializedName("totalSold")
  private BigDecimal totalSold = null;

  @SerializedName("totalBought")
  private BigDecimal totalBought = null;

  @SerializedName("totalSellOrders")
  private Integer totalSellOrders = null;

  @SerializedName("totalBuyOrders")
  private Integer totalBuyOrders = null;

  public Sentiment id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Sentiment currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public Sentiment period(String period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @ApiModelProperty(value = "")
  public String getPeriod() {
    return period;
  }

  public void setPeriod(String period) {
    this.period = period;
  }

  public Sentiment totalSold(BigDecimal totalSold) {
    this.totalSold = totalSold;
    return this;
  }

   /**
   * Get totalSold
   * @return totalSold
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTotalSold() {
    return totalSold;
  }

  public void setTotalSold(BigDecimal totalSold) {
    this.totalSold = totalSold;
  }

  public Sentiment totalBought(BigDecimal totalBought) {
    this.totalBought = totalBought;
    return this;
  }

   /**
   * Get totalBought
   * @return totalBought
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTotalBought() {
    return totalBought;
  }

  public void setTotalBought(BigDecimal totalBought) {
    this.totalBought = totalBought;
  }

  public Sentiment totalSellOrders(Integer totalSellOrders) {
    this.totalSellOrders = totalSellOrders;
    return this;
  }

   /**
   * Get totalSellOrders
   * @return totalSellOrders
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalSellOrders() {
    return totalSellOrders;
  }

  public void setTotalSellOrders(Integer totalSellOrders) {
    this.totalSellOrders = totalSellOrders;
  }

  public Sentiment totalBuyOrders(Integer totalBuyOrders) {
    this.totalBuyOrders = totalBuyOrders;
    return this;
  }

   /**
   * Get totalBuyOrders
   * @return totalBuyOrders
  **/
  @ApiModelProperty(value = "")
  public Integer getTotalBuyOrders() {
    return totalBuyOrders;
  }

  public void setTotalBuyOrders(Integer totalBuyOrders) {
    this.totalBuyOrders = totalBuyOrders;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Sentiment sentiment = (Sentiment) o;
    return Objects.equals(this.id, sentiment.id) &&
        Objects.equals(this.currency, sentiment.currency) &&
        Objects.equals(this.period, sentiment.period) &&
        Objects.equals(this.totalSold, sentiment.totalSold) &&
        Objects.equals(this.totalBought, sentiment.totalBought) &&
        Objects.equals(this.totalSellOrders, sentiment.totalSellOrders) &&
        Objects.equals(this.totalBuyOrders, sentiment.totalBuyOrders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, currency, period, totalSold, totalBought, totalSellOrders, totalBuyOrders);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Sentiment {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    totalSold: ").append(toIndentedString(totalSold)).append("\n");
    sb.append("    totalBought: ").append(toIndentedString(totalBought)).append("\n");
    sb.append("    totalSellOrders: ").append(toIndentedString(totalSellOrders)).append("\n");
    sb.append("    totalBuyOrders: ").append(toIndentedString(totalBuyOrders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

