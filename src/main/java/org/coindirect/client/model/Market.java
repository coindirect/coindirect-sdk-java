/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.coindirect.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.coindirect.client.model.MarketSummary;

/**
 * Market
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-10T11:44:48.559+02:00")
public class Market {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("minimumPrice")
  private BigDecimal minimumPrice = null;

  @SerializedName("maximumPrice")
  private BigDecimal maximumPrice = null;

  @SerializedName("tickSize")
  private BigDecimal tickSize = null;

  @SerializedName("minimumQuantity")
  private BigDecimal minimumQuantity = null;

  @SerializedName("maximumQuantity")
  private BigDecimal maximumQuantity = null;

  @SerializedName("stepSize")
  private BigDecimal stepSize = null;

  @SerializedName("summary")
  private MarketSummary summary = null;

  public Market id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Market symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public Market status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Market minimumPrice(BigDecimal minimumPrice) {
    this.minimumPrice = minimumPrice;
    return this;
  }

   /**
   * Get minimumPrice
   * @return minimumPrice
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMinimumPrice() {
    return minimumPrice;
  }

  public void setMinimumPrice(BigDecimal minimumPrice) {
    this.minimumPrice = minimumPrice;
  }

  public Market maximumPrice(BigDecimal maximumPrice) {
    this.maximumPrice = maximumPrice;
    return this;
  }

   /**
   * Get maximumPrice
   * @return maximumPrice
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMaximumPrice() {
    return maximumPrice;
  }

  public void setMaximumPrice(BigDecimal maximumPrice) {
    this.maximumPrice = maximumPrice;
  }

  public Market tickSize(BigDecimal tickSize) {
    this.tickSize = tickSize;
    return this;
  }

   /**
   * Get tickSize
   * @return tickSize
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTickSize() {
    return tickSize;
  }

  public void setTickSize(BigDecimal tickSize) {
    this.tickSize = tickSize;
  }

  public Market minimumQuantity(BigDecimal minimumQuantity) {
    this.minimumQuantity = minimumQuantity;
    return this;
  }

   /**
   * Get minimumQuantity
   * @return minimumQuantity
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMinimumQuantity() {
    return minimumQuantity;
  }

  public void setMinimumQuantity(BigDecimal minimumQuantity) {
    this.minimumQuantity = minimumQuantity;
  }

  public Market maximumQuantity(BigDecimal maximumQuantity) {
    this.maximumQuantity = maximumQuantity;
    return this;
  }

   /**
   * Get maximumQuantity
   * @return maximumQuantity
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMaximumQuantity() {
    return maximumQuantity;
  }

  public void setMaximumQuantity(BigDecimal maximumQuantity) {
    this.maximumQuantity = maximumQuantity;
  }

  public Market stepSize(BigDecimal stepSize) {
    this.stepSize = stepSize;
    return this;
  }

   /**
   * Get stepSize
   * @return stepSize
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getStepSize() {
    return stepSize;
  }

  public void setStepSize(BigDecimal stepSize) {
    this.stepSize = stepSize;
  }

  public Market summary(MarketSummary summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @ApiModelProperty(value = "")
  public MarketSummary getSummary() {
    return summary;
  }

  public void setSummary(MarketSummary summary) {
    this.summary = summary;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Market market = (Market) o;
    return Objects.equals(this.id, market.id) &&
        Objects.equals(this.symbol, market.symbol) &&
        Objects.equals(this.status, market.status) &&
        Objects.equals(this.minimumPrice, market.minimumPrice) &&
        Objects.equals(this.maximumPrice, market.maximumPrice) &&
        Objects.equals(this.tickSize, market.tickSize) &&
        Objects.equals(this.minimumQuantity, market.minimumQuantity) &&
        Objects.equals(this.maximumQuantity, market.maximumQuantity) &&
        Objects.equals(this.stepSize, market.stepSize) &&
        Objects.equals(this.summary, market.summary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, symbol, status, minimumPrice, maximumPrice, tickSize, minimumQuantity, maximumQuantity, stepSize, summary);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Market {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    minimumPrice: ").append(toIndentedString(minimumPrice)).append("\n");
    sb.append("    maximumPrice: ").append(toIndentedString(maximumPrice)).append("\n");
    sb.append("    tickSize: ").append(toIndentedString(tickSize)).append("\n");
    sb.append("    minimumQuantity: ").append(toIndentedString(minimumQuantity)).append("\n");
    sb.append("    maximumQuantity: ").append(toIndentedString(maximumQuantity)).append("\n");
    sb.append("    stepSize: ").append(toIndentedString(stepSize)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

