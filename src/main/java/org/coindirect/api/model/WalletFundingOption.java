/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.coindirect.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.coindirect.api.model.GenericOption;
/**
 * WalletFundingOption
 */


public class WalletFundingOption {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("code")
  private String code = null;

  @JsonProperty("supportsWithdrawals")
  private Boolean supportsWithdrawals = false;

  @JsonProperty("supportsDeposits")
  private Boolean supportsDeposits = false;

  @JsonProperty("depositOptions")
  private Map<String, String> depositOptions = null;

  @JsonProperty("withdrawalOptions")
  private List<GenericOption> withdrawalOptions = null;

  public WalletFundingOption id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public WalletFundingOption code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public WalletFundingOption supportsWithdrawals(Boolean supportsWithdrawals) {
    this.supportsWithdrawals = supportsWithdrawals;
    return this;
  }

   /**
   * Get supportsWithdrawals
   * @return supportsWithdrawals
  **/
  @Schema(description = "")
  public Boolean isSupportsWithdrawals() {
    return supportsWithdrawals;
  }

  public void setSupportsWithdrawals(Boolean supportsWithdrawals) {
    this.supportsWithdrawals = supportsWithdrawals;
  }

  public WalletFundingOption supportsDeposits(Boolean supportsDeposits) {
    this.supportsDeposits = supportsDeposits;
    return this;
  }

   /**
   * Get supportsDeposits
   * @return supportsDeposits
  **/
  @Schema(description = "")
  public Boolean isSupportsDeposits() {
    return supportsDeposits;
  }

  public void setSupportsDeposits(Boolean supportsDeposits) {
    this.supportsDeposits = supportsDeposits;
  }

  public WalletFundingOption depositOptions(Map<String, String> depositOptions) {
    this.depositOptions = depositOptions;
    return this;
  }

  public WalletFundingOption putDepositOptionsItem(String key, String depositOptionsItem) {
    if (this.depositOptions == null) {
      this.depositOptions = new HashMap<>();
    }
    this.depositOptions.put(key, depositOptionsItem);
    return this;
  }

   /**
   * Get depositOptions
   * @return depositOptions
  **/
  @Schema(description = "")
  public Map<String, String> getDepositOptions() {
    return depositOptions;
  }

  public void setDepositOptions(Map<String, String> depositOptions) {
    this.depositOptions = depositOptions;
  }

  public WalletFundingOption withdrawalOptions(List<GenericOption> withdrawalOptions) {
    this.withdrawalOptions = withdrawalOptions;
    return this;
  }

  public WalletFundingOption addWithdrawalOptionsItem(GenericOption withdrawalOptionsItem) {
    if (this.withdrawalOptions == null) {
      this.withdrawalOptions = new ArrayList<>();
    }
    this.withdrawalOptions.add(withdrawalOptionsItem);
    return this;
  }

   /**
   * Get withdrawalOptions
   * @return withdrawalOptions
  **/
  @Schema(description = "")
  public List<GenericOption> getWithdrawalOptions() {
    return withdrawalOptions;
  }

  public void setWithdrawalOptions(List<GenericOption> withdrawalOptions) {
    this.withdrawalOptions = withdrawalOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletFundingOption walletFundingOption = (WalletFundingOption) o;
    return Objects.equals(this.id, walletFundingOption.id) &&
        Objects.equals(this.code, walletFundingOption.code) &&
        Objects.equals(this.supportsWithdrawals, walletFundingOption.supportsWithdrawals) &&
        Objects.equals(this.supportsDeposits, walletFundingOption.supportsDeposits) &&
        Objects.equals(this.depositOptions, walletFundingOption.depositOptions) &&
        Objects.equals(this.withdrawalOptions, walletFundingOption.withdrawalOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, code, supportsWithdrawals, supportsDeposits, depositOptions, withdrawalOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletFundingOption {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    supportsWithdrawals: ").append(toIndentedString(supportsWithdrawals)).append("\n");
    sb.append("    supportsDeposits: ").append(toIndentedString(supportsDeposits)).append("\n");
    sb.append("    depositOptions: ").append(toIndentedString(depositOptions)).append("\n");
    sb.append("    withdrawalOptions: ").append(toIndentedString(withdrawalOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
