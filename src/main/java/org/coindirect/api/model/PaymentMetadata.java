/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.coindirect.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * PaymentMetadata
 */


public class PaymentMetadata {
  @JsonProperty("successUrl")
  private String successUrl = null;

  @JsonProperty("theme")
  private String theme = null;

  @JsonProperty("tokenize")
  private Boolean tokenize = false;

  public PaymentMetadata successUrl(String successUrl) {
    this.successUrl = successUrl;
    return this;
  }

   /**
   * Get successUrl
   * @return successUrl
  **/
  @Schema(description = "")
  public String getSuccessUrl() {
    return successUrl;
  }

  public void setSuccessUrl(String successUrl) {
    this.successUrl = successUrl;
  }

  public PaymentMetadata theme(String theme) {
    this.theme = theme;
    return this;
  }

   /**
   * Get theme
   * @return theme
  **/
  @Schema(description = "")
  public String getTheme() {
    return theme;
  }

  public void setTheme(String theme) {
    this.theme = theme;
  }

  public PaymentMetadata tokenize(Boolean tokenize) {
    this.tokenize = tokenize;
    return this;
  }

   /**
   * Get tokenize
   * @return tokenize
  **/
  @Schema(description = "")
  public Boolean isTokenize() {
    return tokenize;
  }

  public void setTokenize(Boolean tokenize) {
    this.tokenize = tokenize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMetadata paymentMetadata = (PaymentMetadata) o;
    return Objects.equals(this.successUrl, paymentMetadata.successUrl) &&
        Objects.equals(this.theme, paymentMetadata.theme) &&
        Objects.equals(this.tokenize, paymentMetadata.tokenize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(successUrl, theme, tokenize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMetadata {\n");
    
    sb.append("    successUrl: ").append(toIndentedString(successUrl)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    tokenize: ").append(toIndentedString(tokenize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
