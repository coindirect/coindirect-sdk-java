/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.coindirect.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.coindirect.api.model.PaymentMethodCategory;
/**
 * PaymentMethodType
 */


public class PaymentMethodType {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("category")
  private PaymentMethodCategory category = null;

  @JsonProperty("enabled")
  private Boolean enabled = false;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("options")
  private Map<String, Object> options = null;

  @JsonProperty("countryOptions")
  private Map<String, Object> countryOptions = null;

  public PaymentMethodType id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PaymentMethodType category(PaymentMethodCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public PaymentMethodCategory getCategory() {
    return category;
  }

  public void setCategory(PaymentMethodCategory category) {
    this.category = category;
  }

  public PaymentMethodType enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public PaymentMethodType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PaymentMethodType options(Map<String, Object> options) {
    this.options = options;
    return this;
  }

  public PaymentMethodType putOptionsItem(String key, Object optionsItem) {
    if (this.options == null) {
      this.options = new HashMap<>();
    }
    this.options.put(key, optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @Schema(description = "")
  public Map<String, Object> getOptions() {
    return options;
  }

  public void setOptions(Map<String, Object> options) {
    this.options = options;
  }

  public PaymentMethodType countryOptions(Map<String, Object> countryOptions) {
    this.countryOptions = countryOptions;
    return this;
  }

  public PaymentMethodType putCountryOptionsItem(String key, Object countryOptionsItem) {
    if (this.countryOptions == null) {
      this.countryOptions = new HashMap<>();
    }
    this.countryOptions.put(key, countryOptionsItem);
    return this;
  }

   /**
   * Get countryOptions
   * @return countryOptions
  **/
  @Schema(description = "")
  public Map<String, Object> getCountryOptions() {
    return countryOptions;
  }

  public void setCountryOptions(Map<String, Object> countryOptions) {
    this.countryOptions = countryOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethodType paymentMethodType = (PaymentMethodType) o;
    return Objects.equals(this.id, paymentMethodType.id) &&
        Objects.equals(this.category, paymentMethodType.category) &&
        Objects.equals(this.enabled, paymentMethodType.enabled) &&
        Objects.equals(this.name, paymentMethodType.name) &&
        Objects.equals(this.options, paymentMethodType.options) &&
        Objects.equals(this.countryOptions, paymentMethodType.countryOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, category, enabled, name, options, countryOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethodType {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    countryOptions: ").append(toIndentedString(countryOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
