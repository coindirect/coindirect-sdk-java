/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.coindirect.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.coindirect.api.model.Form;
/**
 * PayInInstruction
 */


public class PayInInstruction {
  /**
   * Gets or Sets action
   */
  public enum ActionEnum {
    REDIRECT("REDIRECT"),
    FORM("FORM"),
    DISPLAY("DISPLAY"),
    NONE("NONE");

    private String value;

    ActionEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ActionEnum fromValue(String text) {
      for (ActionEnum b : ActionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("action")
  private ActionEnum action = null;

  @JsonProperty("form")
  private Form form = null;

  @JsonProperty("redirectUrl")
  private String redirectUrl = null;

  @JsonProperty("displayParameters")
  private Object displayParameters = null;

  public PayInInstruction action(ActionEnum action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public ActionEnum getAction() {
    return action;
  }

  public void setAction(ActionEnum action) {
    this.action = action;
  }

  public PayInInstruction form(Form form) {
    this.form = form;
    return this;
  }

   /**
   * Get form
   * @return form
  **/
  @Schema(description = "")
  public Form getForm() {
    return form;
  }

  public void setForm(Form form) {
    this.form = form;
  }

  public PayInInstruction redirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * Get redirectUrl
   * @return redirectUrl
  **/
  @Schema(description = "")
  public String getRedirectUrl() {
    return redirectUrl;
  }

  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }

  public PayInInstruction displayParameters(Object displayParameters) {
    this.displayParameters = displayParameters;
    return this;
  }

   /**
   * Get displayParameters
   * @return displayParameters
  **/
  @Schema(description = "")
  public Object getDisplayParameters() {
    return displayParameters;
  }

  public void setDisplayParameters(Object displayParameters) {
    this.displayParameters = displayParameters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayInInstruction payInInstruction = (PayInInstruction) o;
    return Objects.equals(this.action, payInInstruction.action) &&
        Objects.equals(this.form, payInInstruction.form) &&
        Objects.equals(this.redirectUrl, payInInstruction.redirectUrl) &&
        Objects.equals(this.displayParameters, payInInstruction.displayParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, form, redirectUrl, displayParameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayInInstruction {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    form: ").append(toIndentedString(form)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    displayParameters: ").append(toIndentedString(displayParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
