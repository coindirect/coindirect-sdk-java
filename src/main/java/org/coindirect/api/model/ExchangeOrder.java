/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.coindirect.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
/**
 * ExchangeOrder
 */


public class ExchangeOrder {
  @JsonProperty("symbol")
  private String symbol = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("amount")
  private BigDecimal amount = null;

  @JsonProperty("executedAmount")
  private BigDecimal executedAmount = null;

  @JsonProperty("executedPrice")
  private BigDecimal executedPrice = null;

  @JsonProperty("price")
  private BigDecimal price = null;

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("side")
  private String side = null;

  @JsonProperty("dateCreated")
  private OffsetDateTime dateCreated = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("executedFees")
  private BigDecimal executedFees = null;

  public ExchangeOrder symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public ExchangeOrder uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public ExchangeOrder amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public ExchangeOrder executedAmount(BigDecimal executedAmount) {
    this.executedAmount = executedAmount;
    return this;
  }

   /**
   * Get executedAmount
   * @return executedAmount
  **/
  @Schema(description = "")
  public BigDecimal getExecutedAmount() {
    return executedAmount;
  }

  public void setExecutedAmount(BigDecimal executedAmount) {
    this.executedAmount = executedAmount;
  }

  public ExchangeOrder executedPrice(BigDecimal executedPrice) {
    this.executedPrice = executedPrice;
    return this;
  }

   /**
   * Get executedPrice
   * @return executedPrice
  **/
  @Schema(description = "")
  public BigDecimal getExecutedPrice() {
    return executedPrice;
  }

  public void setExecutedPrice(BigDecimal executedPrice) {
    this.executedPrice = executedPrice;
  }

  public ExchangeOrder price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @Schema(description = "")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public ExchangeOrder status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ExchangeOrder side(String side) {
    this.side = side;
    return this;
  }

   /**
   * Get side
   * @return side
  **/
  @Schema(description = "")
  public String getSide() {
    return side;
  }

  public void setSide(String side) {
    this.side = side;
  }

  public ExchangeOrder dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @Schema(description = "")
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }

  public ExchangeOrder type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ExchangeOrder executedFees(BigDecimal executedFees) {
    this.executedFees = executedFees;
    return this;
  }

   /**
   * Get executedFees
   * @return executedFees
  **/
  @Schema(description = "")
  public BigDecimal getExecutedFees() {
    return executedFees;
  }

  public void setExecutedFees(BigDecimal executedFees) {
    this.executedFees = executedFees;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExchangeOrder exchangeOrder = (ExchangeOrder) o;
    return Objects.equals(this.symbol, exchangeOrder.symbol) &&
        Objects.equals(this.uuid, exchangeOrder.uuid) &&
        Objects.equals(this.amount, exchangeOrder.amount) &&
        Objects.equals(this.executedAmount, exchangeOrder.executedAmount) &&
        Objects.equals(this.executedPrice, exchangeOrder.executedPrice) &&
        Objects.equals(this.price, exchangeOrder.price) &&
        Objects.equals(this.status, exchangeOrder.status) &&
        Objects.equals(this.side, exchangeOrder.side) &&
        Objects.equals(this.dateCreated, exchangeOrder.dateCreated) &&
        Objects.equals(this.type, exchangeOrder.type) &&
        Objects.equals(this.executedFees, exchangeOrder.executedFees);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, uuid, amount, executedAmount, executedPrice, price, status, side, dateCreated, type, executedFees);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExchangeOrder {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    executedAmount: ").append(toIndentedString(executedAmount)).append("\n");
    sb.append("    executedPrice: ").append(toIndentedString(executedPrice)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    side: ").append(toIndentedString(side)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    executedFees: ").append(toIndentedString(executedFees)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
