/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.coindirect.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import org.coindirect.api.model.AccountMethod;
import org.coindirect.api.model.PayInMethod;
import org.coindirect.api.model.PayOutInstruction;
import org.coindirect.api.model.PayOutMethod;
/**
 * PayDetailRequest
 */


public class PayDetailRequest {
  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("payInMethod")
  private PayInMethod payInMethod = null;

  @JsonProperty("payOutMethod")
  private PayOutMethod payOutMethod = null;

  @JsonProperty("accountPayInMethod")
  private AccountMethod accountPayInMethod = null;

  @JsonProperty("accountPayOutMethod")
  private AccountMethod accountPayOutMethod = null;

  @JsonProperty("payOutInstruction")
  private PayOutInstruction payOutInstruction = null;

  @JsonProperty("amount")
  private BigDecimal amount = null;

  public PayDetailRequest currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public PayDetailRequest payInMethod(PayInMethod payInMethod) {
    this.payInMethod = payInMethod;
    return this;
  }

   /**
   * Get payInMethod
   * @return payInMethod
  **/
  @Schema(description = "")
  public PayInMethod getPayInMethod() {
    return payInMethod;
  }

  public void setPayInMethod(PayInMethod payInMethod) {
    this.payInMethod = payInMethod;
  }

  public PayDetailRequest payOutMethod(PayOutMethod payOutMethod) {
    this.payOutMethod = payOutMethod;
    return this;
  }

   /**
   * Get payOutMethod
   * @return payOutMethod
  **/
  @Schema(description = "")
  public PayOutMethod getPayOutMethod() {
    return payOutMethod;
  }

  public void setPayOutMethod(PayOutMethod payOutMethod) {
    this.payOutMethod = payOutMethod;
  }

  public PayDetailRequest accountPayInMethod(AccountMethod accountPayInMethod) {
    this.accountPayInMethod = accountPayInMethod;
    return this;
  }

   /**
   * Get accountPayInMethod
   * @return accountPayInMethod
  **/
  @Schema(description = "")
  public AccountMethod getAccountPayInMethod() {
    return accountPayInMethod;
  }

  public void setAccountPayInMethod(AccountMethod accountPayInMethod) {
    this.accountPayInMethod = accountPayInMethod;
  }

  public PayDetailRequest accountPayOutMethod(AccountMethod accountPayOutMethod) {
    this.accountPayOutMethod = accountPayOutMethod;
    return this;
  }

   /**
   * Get accountPayOutMethod
   * @return accountPayOutMethod
  **/
  @Schema(description = "")
  public AccountMethod getAccountPayOutMethod() {
    return accountPayOutMethod;
  }

  public void setAccountPayOutMethod(AccountMethod accountPayOutMethod) {
    this.accountPayOutMethod = accountPayOutMethod;
  }

  public PayDetailRequest payOutInstruction(PayOutInstruction payOutInstruction) {
    this.payOutInstruction = payOutInstruction;
    return this;
  }

   /**
   * Get payOutInstruction
   * @return payOutInstruction
  **/
  @Schema(description = "")
  public PayOutInstruction getPayOutInstruction() {
    return payOutInstruction;
  }

  public void setPayOutInstruction(PayOutInstruction payOutInstruction) {
    this.payOutInstruction = payOutInstruction;
  }

  public PayDetailRequest amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @Schema(description = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayDetailRequest payDetailRequest = (PayDetailRequest) o;
    return Objects.equals(this.currency, payDetailRequest.currency) &&
        Objects.equals(this.payInMethod, payDetailRequest.payInMethod) &&
        Objects.equals(this.payOutMethod, payDetailRequest.payOutMethod) &&
        Objects.equals(this.accountPayInMethod, payDetailRequest.accountPayInMethod) &&
        Objects.equals(this.accountPayOutMethod, payDetailRequest.accountPayOutMethod) &&
        Objects.equals(this.payOutInstruction, payDetailRequest.payOutInstruction) &&
        Objects.equals(this.amount, payDetailRequest.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, payInMethod, payOutMethod, accountPayInMethod, accountPayOutMethod, payOutInstruction, amount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayDetailRequest {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    payInMethod: ").append(toIndentedString(payInMethod)).append("\n");
    sb.append("    payOutMethod: ").append(toIndentedString(payOutMethod)).append("\n");
    sb.append("    accountPayInMethod: ").append(toIndentedString(accountPayInMethod)).append("\n");
    sb.append("    accountPayOutMethod: ").append(toIndentedString(accountPayOutMethod)).append("\n");
    sb.append("    payOutInstruction: ").append(toIndentedString(payOutInstruction)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
