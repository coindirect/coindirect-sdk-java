/*
 * Coindirect
 * The Coindirect API is offered to all users to make use of our P2P Marketplace, Exchange and Wallets.
 *
 * OpenAPI spec version: 1
 * Contact: support@coindirect.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.coindirect.client.api;

import org.coindirect.client.invoker.ApiException;
import org.coindirect.client.model.Errors;
import org.coindirect.client.model.GenericOption;
import org.coindirect.client.model.PaymentMethod;
import org.coindirect.client.model.PaymentMethodCategory;
import org.coindirect.client.model.PaymentMethodType;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentMethodsApi
 */
@Ignore
public class PaymentMethodsApiTest {

    private final PaymentMethodsApi api = new PaymentMethodsApi();

    
    /**
     * Create Payment Method
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPaymentMethodTest() throws ApiException {
        PaymentMethod body = null;
        PaymentMethod response = api.createPaymentMethod(body);

        // TODO: test validations
    }
    
    /**
     * Delete Payment Method
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePaymentMethodTest() throws ApiException {
        Long id = null;
        api.deletePaymentMethod(id);

        // TODO: test validations
    }
    
    /**
     * Retrieve Payment Method
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaymentMethodTest() throws ApiException {
        Long id = null;
        PaymentMethod response = api.getPaymentMethod(id);

        // TODO: test validations
    }
    
    /**
     * Read Payment Method Category
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaymentMethodCategoryTest() throws ApiException {
        Long id = null;
        PaymentMethodCategory response = api.getPaymentMethodCategory(id);

        // TODO: test validations
    }
    
    /**
     * Read Payment Method Type
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaymentMethodTypeTest() throws ApiException {
        Long id = null;
        PaymentMethodType response = api.getPaymentMethodType(id);

        // TODO: test validations
    }
    
    /**
     * List Dependant options for Payment Method Type on field
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNestedOptionsForPaymentMethodTypeTest() throws ApiException {
        Long id = null;
        String code = null;
        String value = null;
        List<GenericOption> response = api.listNestedOptionsForPaymentMethodType(id, code, value);

        // TODO: test validations
    }
    
    /**
     * List Options for Payment Method Type
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOptionsForPaymentMethodTypeTest() throws ApiException {
        Long id = null;
        List<GenericOption> response = api.listOptionsForPaymentMethodType(id);

        // TODO: test validations
    }
    
    /**
     * List Payment Method Categories
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPaymentMethodCategoriesTest() throws ApiException {
        Integer offset = null;
        Integer max = null;
        List<PaymentMethodCategory> response = api.listPaymentMethodCategories(offset, max);

        // TODO: test validations
    }
    
    /**
     * List Payment Method Types
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPaymentMethodTypesTest() throws ApiException {
        Integer offset = null;
        Integer max = null;
        List<PaymentMethodType> response = api.listPaymentMethodTypes(offset, max);

        // TODO: test validations
    }
    
    /**
     * List Payment Methods
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPaymentMethodsTest() throws ApiException {
        String currencyCode = null;
        Integer offset = null;
        Integer max = null;
        List<PaymentMethod> response = api.listPaymentMethods(currencyCode, offset, max);

        // TODO: test validations
    }
    
    /**
     * List Search options for Payment Method Type
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSearchOptionsForPaymentMethodTypeTest() throws ApiException {
        Long id = null;
        List<GenericOption> response = api.listSearchOptionsForPaymentMethodType(id);

        // TODO: test validations
    }
    
    /**
     * Update Payment Method
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePaymentMethodTest() throws ApiException {
        Long id = null;
        PaymentMethod body = null;
        PaymentMethod response = api.updatePaymentMethod(id, body);

        // TODO: test validations
    }
    
}
